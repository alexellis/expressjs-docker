credentials:
  system:
    domainCredentials:
    - credentials:
      - usernamePassword:
          description: "artifactorycloud"
          id: "artifactorycloud"
          password: "{AQAAABAAAAAgCrhsO+aBtxFNF3fAjvrEPMH0QNez+jiDfexh3O6NcfBjSTAKs2UiFGlJEIgfnpFO}"
          scope: GLOBAL
          username: "angel.nunez.salazar@gmail.com"
jenkins:
  agentProtocols:
  - "JNLP4-connect"
  - "Ping"
  authorizationStrategy:
    roleBased:
      roles:
        global: |-
          FAILED TO EXPORT
          org.jenkinsci.plugins.rolestrategy.casc.GrantedRoles#global: java.lang.NullPointerException
            at java.util.regex.Matcher.getTextLength(Matcher.java:1283)
            at java.util.regex.Matcher.reset(Matcher.java:309)
            at java.util.regex.Matcher.<init>(Matcher.java:229)
            at java.util.regex.Pattern.matcher(Pattern.java:1093)
            at org.jenkinsci.plugins.rolestrategy.casc.PermissionFinder.findPermissionId(PermissionFinder.java:42)
            at org.jenkinsci.plugins.rolestrategy.casc.RoleDefinition.getRole(RoleDefinition.java:48)
            at org.jenkinsci.plugins.rolestrategy.casc.RoleDefinition.<init>(RoleDefinition.java:41)
          Caused: java.lang.reflect.InvocationTargetException
            at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
            at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
            at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
            at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
            at io.jenkins.plugins.casc.impl.configurators.DataBoundConfigurator.describe(DataBoundConfigurator.java:309)
            at io.jenkins.plugins.casc.Attribute._describe(Attribute.java:329)
            at io.jenkins.plugins.casc.Attribute.describe(Attribute.java:258)
            at io.jenkins.plugins.casc.impl.configurators.DataBoundConfigurator.describe(DataBoundConfigurator.java:317)
            at io.jenkins.plugins.casc.Attribute._describe(Attribute.java:329)
            at io.jenkins.plugins.casc.Attribute.describe(Attribute.java:265)
            at io.jenkins.plugins.casc.BaseConfigurator.compare(BaseConfigurator.java:391)
            at org.jenkinsci.plugins.rolestrategy.casc.RoleBasedAuthorizationStrategyConfigurator.describe(RoleBasedAuthorizationStrategyConfigurator.java:94)
            at org.jenkinsci.plugins.rolestrategy.casc.RoleBasedAuthorizationStrategyConfigurator.describe(RoleBasedAuthorizationStrategyConfigurator.java:34)
            at io.jenkins.plugins.casc.impl.configurators.HeteroDescribableConfigurator.lambda$convertToNode$de0cd4f8$1(HeteroDescribableConfigurator.java:282)
            at io.vavr.CheckedFunction0.lambda$unchecked$52349c75$1(CheckedFunction0.java:247)
            at io.jenkins.plugins.casc.impl.configurators.HeteroDescribableConfigurator.convertToNode(HeteroDescribableConfigurator.java:282)
            at io.jenkins.plugins.casc.impl.configurators.HeteroDescribableConfigurator.lambda$describe$5(HeteroDescribableConfigurator.java:107)
            at io.vavr.control.Option.map(Option.java:392)
            at io.jenkins.plugins.casc.impl.configurators.HeteroDescribableConfigurator.describe(HeteroDescribableConfigurator.java:107)
            at io.jenkins.plugins.casc.impl.configurators.HeteroDescribableConfigurator.describe(HeteroDescribableConfigurator.java:55)
            at io.jenkins.plugins.casc.Attribute._describe(Attribute.java:329)
            at io.jenkins.plugins.casc.Attribute.describe(Attribute.java:265)
            at io.jenkins.plugins.casc.Configurator.describe(Configurator.java:182)
  clouds:
  - kubernetes:
      containerCap: 10
      containerCapStr: "10"
      jenkinsTunnel: "jenkins-agent:50000"
      jenkinsUrl: "http://jenkins:8080"
      maxRequestsPerHost: 32
      maxRequestsPerHostStr: "32"
      name: "kubernetes"
      namespace: "default"
      podLabels:
      - key: "jenkins/jenkins-jenkins-slave"
        value: "true"
      serverUrl: "https://kubernetes.default"
      templates:
      - containers:
        - args: "cat"
          command: "/bin/sh -c"
          image: "docker"
          livenessProbe:
            failureThreshold: 0
            initialDelaySeconds: 0
            periodSeconds: 0
            successThreshold: 0
            timeoutSeconds: 0
          name: "docker"
          resourceLimitCpu: "300m"
          resourceLimitMemory: "500Mi"
          resourceRequestCpu: "100m"
          resourceRequestMemory: "300Mi"
          ttyEnabled: true
          workingDir: "/home/jenkins/agent"
        - args: "cat"
          command: "/bin/sh -c"
          image: "alpine/helm:3.2.2"
          livenessProbe:
            failureThreshold: 0
            initialDelaySeconds: 0
            periodSeconds: 0
            successThreshold: 0
            timeoutSeconds: 0
          name: "helm"
          resourceLimitCpu: "300m"
          resourceLimitMemory: "500Mi"
          resourceRequestCpu: "100m"
          resourceRequestMemory: "300Mi"
          ttyEnabled: true
          workingDir: "/home/jenkins/agent"
        - args: "cat"
          command: "/bin/sh -c"
          image: "byrnedo/alpine-curl:0.1.8"
          livenessProbe:
            failureThreshold: 0
            initialDelaySeconds: 0
            periodSeconds: 0
            successThreshold: 0
            timeoutSeconds: 0
          name: "curl"
          ttyEnabled: true
          workingDir: "/home/jenkins/agent"
        hostNetwork: false
        label: "jenkins-jenkins-slave "
        name: "default"
        nodeUsageMode: NORMAL
        podRetention: "onFailure"
        serviceAccount: "jenkins"
        volumes:
        - hostPathVolume:
            hostPath: "/var/run/docker.sock"
            mountPath: "/var/run/docker.sock"
        yamlMergeStrategy: "override"
  crumbIssuer:
    standard:
      excludeClientIPFromCrumb: true
  disableRememberMe: false
  disabledAdministrativeMonitors:
  - "hudson.diagnosis.ReverseProxySetupMonitor"
  labelAtoms:
  - name: "jenkins-jenkins-slave"
  - name: "master"
  markupFormatter: "plainText"
  mode: NORMAL
  myViewsTabBar: "standard"
  numExecutors: 0
  primaryView:
    all:
      name: "all"
  projectNamingStrategy: "standard"
  quietPeriod: 5
  remotingSecurity:
    enabled: true
  scmCheckoutRetryCount: 0
  securityRealm:
    local:
      allowsSignup: false
      enableCaptcha: false
      users:
      - id: "admin"
        name: "Admin"
        properties:
        - "apiToken"
        - "myView"
        - preferredProvider:
            providerId: "default"
        - "timezone"
        - mailer:
            emailAddress: "admin@jenkins.com"
      - id: "carlos_luna"
        name: "Carlos Luna"
        properties:
        - "apiToken"
        - "myView"
        - preferredProvider:
            providerId: "default"
        - "timezone"
        - mailer:
            emailAddress: "carlos_luna@gmail.com"
      - id: "juan_perez"
        name: "Juan Perez"
        properties:
        - "apiToken"
        - "myView"
        - preferredProvider:
            providerId: "default"
        - "timezone"
        - mailer:
            emailAddress: "juan_perez@gmail.com"
  slaveAgentPort: 50000
  updateCenter:
    sites:
    - id: "default"
      url: "https://updates.jenkins.io/update-center.json"
  views:
  - all:
      name: "all"
  viewsTabBar: "standard"
security:
  apiToken:
    creationOfLegacyTokenEnabled: false
    tokenGenerationOnCreationEnabled: false
    usageStatisticsEnabled: true
  sSHD:
    port: -1
  scriptApproval:
    approvedSignatures:
    - "method jenkins.model.Jenkins getAuthorizationStrategy"
    - "staticMethod jenkins.model.Jenkins getInstance"
unclassified:
  buildDiscarders:
    configuredBuildDiscarders:
    - "jobBuildDiscarder"
  casCGlobalConfig:
    configurationPath: "https://raw.githubusercontent.com/snahider/expressjs-k8s/master/jenkins.yaml"
  defaultFolderConfiguration:
    healthMetrics:
    - worstChildHealthMetric:
        recursive: true
  gitSCM:
    createAccountBasedOnEmail: false
    showEntireCommitSummaryInChanges: false
    useExistingAccountWithSameEmail: false
  globalLibraries:
    libraries:
    - defaultVersion: "master"
      implicit: true
      name: "default_library"
      retriever:
        modernSCM:
          scm:
            git:
              id: "ccfeb859-2ac8-49eb-a387-f8cb5dc6526c"
              remote: "https://github.com/snahider/sn-jenkins-shared-libraries.git "
              traits:
              - "gitBranchDiscovery"
  location:
    adminAddress: "address not configured yet <nobody@nowhere>"
    url: "http://jenkins:8080/"
  mailer:
    charset: "UTF-8"
    useSsl: false
    useTls: false
  pollSCM:
    pollingThreadCount: 10
tool:
  git:
    installations:
    - home: "git"
      name: "Default"
