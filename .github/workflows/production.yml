name: Deploy to Production
on:
  workflow_dispatch:
    inputs:
      full-sha:
        description: 'Git commit full SHA (if empty `latest`)'
        required: false
jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      APPLICATION: ${{ steps.var-application.outputs.APPLICATION }}
      SHA_SHORT: ${{ steps.var-sha-short.outputs.SHA_SHORT }}
      IMAGE_TAG: ${{ steps.docker-vars.outputs.IMAGE_TAG }}
      RELEASE_VERSION: ${{ steps.release-version.outputs.RELEASE_VERSION }}
    steps:
      - name: Variable SHA_SHORT
        id: var-sha-short
        run: |
          echo ::set-output name=SHA_SHORT::$(echo ${{ github.event.inputs.full-sha == '' && github.sha || github.event.inputs.full-sha }} | cut -c1-7)
      - name: Variable APPLICATION
        id: var-application
        run: |
          echo ::set-output name=APPLICATION::${{ github.event.repository.name }}
      - name: Variable IMAGE_TAG
        id: docker-vars
        run: |
          echo ::set-output name=IMAGE_TAG::ghcr.io/${{github.repository_owner}}/${{steps.var-application.outputs.APPLICATION}}:${{steps.var-sha-short.outputs.SHA_SHORT}}
      - name: Variable RELEASE_VERSION
        id: release-version
        run: |
          echo ::set-output name=RELEASE_VERSION::$(date +'%Y-%m-%d')
  checkout:
    runs-on: ubuntu-latest
    needs: prepare
    steps:
      - name: Checkout (Latest)
        uses: actions/checkout@v2
        if: github.event.inputs.full-sha == ''
      - name: Checkout (Custom Ref)
        uses: actions/checkout@v2
        if: github.event.inputs.full-sha != ''
        with:
          ref: ${{ github.event.inputs.full-sha }}
  deploy-k8s:
    runs-on: ubuntu-latest
    needs:
      - prepare
      - checkout
    steps:
      - run: |
          echo "Deploy =)"
  verify-deployment:
    runs-on: ubuntu-latest
    needs:
      - prepare
      - deploy-k8s
    steps:
      - run: |
          echo "Verify =)"
  # create-release-branch:
  #   if: github.ref == 'refs/heads/master'
  #   runs-on: ubuntu-latest
  #   needs: 
  #     - prepare
  #     - verify-deployment
  #   steps:
  #     - name: Checkout (Latest)
  #       uses: actions/checkout@v2
  #       if: github.event.inputs.full-sha == ''
  #     - name: Checkout (Custom Ref)
  #       uses: actions/checkout@v2
  #       if: github.event.inputs.full-sha != ''
  #       with:
  #         ref: ${{ github.event.inputs.full-sha }}
  #     - name: Create Release Branch
  #       run: |
  #         git checkout -b release/${{needs.prepare.outputs.RELEASE_VERSION}}
  #         git push origin release/${{needs.prepare.outputs.RELEASE_VERSION}}
  create-github-release:
    runs-on: ubuntu-latest
    needs:
      - prepare
      - verify-deployment
    steps:
      - name: Create tag
        uses: actions/github-script@v4.1.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: "refs/tags/${{needs.prepare.outputs.RELEASE_VERSION}}",
              sha: "${{ github.event.inputs.full-sha == '' && github.sha || github.event.inputs.full-sha }}""
            })
      - name: Build Changelog
        id: change-log
        uses: mikepenz/release-changelog-builder-action@v1
        env:
          toTag: ${{needs.prepare.outputs.RELEASE_VERSION}}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Create Release
        uses: actions/create-release@v1
        with:
          tag_name: ${{needs.prepare.outputs.RELEASE_VERSION}}
          release_name: ${{needs.prepare.outputs.RELEASE_VERSION}}
          body: ${{steps.change-log.outputs.changelog}}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
